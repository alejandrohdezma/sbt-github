"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[927],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),d=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=d(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=d(n),c=a,m=u["".concat(s,".").concat(c)]||u[c]||h[c]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},891:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>d,toc:()=>u});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s="Integration with sbt-header",d={unversionedId:"integrations/sbt-header",id:"integrations/sbt-header",title:"Integration with sbt-header",description:"If you use sbt-header for creating/updating your file headers according to your project's license you can benefit from our sbt-github-header module which pre-fills header template with downloaded Github values. To use it, just add the following line to your plugins.sbt file",source:"@site/target/mdoc/integrations/sbt-header.md",sourceDirName:"integrations",slug:"/integrations/sbt-header",permalink:"/sbt-github/docs/integrations/sbt-header",draft:!1,editUrl:"https://github.com/alejandrohdezma/sbt-github/edit/main/site/docs/integrations/sbt-header.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Github Token",permalink:"/sbt-github/docs/github-token"},next:{title:"Integration with sbt-mdoc",permalink:"/sbt-github/docs/integrations/sbt-mdoc"}},p={},u=[{value:"What does this integration do?",id:"what-does-this-integration-do",level:2},{value:"Example",id:"example",level:3}],h={toc:u},c="wrapper";function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)(c,(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"integration-with-sbt-header"},"Integration with ",(0,i.kt)("inlineCode",{parentName:"h1"},"sbt-header")),(0,i.kt)("p",null,"If you use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/sbt/sbt-header"},"sbt-header")," for creating/updating your file headers according to your project's license you can benefit from our ",(0,i.kt)("inlineCode",{parentName:"p"},"sbt-github-header")," module which pre-fills header template with downloaded Github values. To use it, just add the following line to your ",(0,i.kt)("inlineCode",{parentName:"p"},"plugins.sbt")," file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'addSbtPlugin("com.alejandrohdezma" % "sbt-github-header" % "0.11.8")\n')),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"So we don't force a version of sbt-header, it is requested as a ",(0,i.kt)("a",{parentName:"p",href:"https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html"},'"Provided"')," dependency so you'll need to provide your own version of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/sbt/sbt-header"},"sbt-header"),".")),(0,i.kt)("h2",{id:"what-does-this-integration-do"},"What does this integration do?"),(0,i.kt)("p",null,"Populates the ",(0,i.kt)("inlineCode",{parentName:"p"},"headerLicense")," setting from ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/sbt/sbt-header"},(0,i.kt)("inlineCode",{parentName:"a"},"sbt-header"))," with values extracted from Github by ",(0,i.kt)("inlineCode",{parentName:"p"},"SbtGithubPlugin"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Year"),": The information stored in ",(0,i.kt)("inlineCode",{parentName:"li"},"yearRange"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Copyright Owner"),": The information stored in ",(0,i.kt)("inlineCode",{parentName:"li"},"copyrightOwner"),", provided by the own integration\nplugin. Defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"organizationName")," value if there is no value for ",(0,i.kt)("inlineCode",{parentName:"li"},"organizationHomepage")," or\n",(0,i.kt)("inlineCode",{parentName:"li"},"organizationName <organizationHomepage>")," if there is.")),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"headerLicenseStyle")," setting from the ",(0,i.kt)("inlineCode",{parentName:"p"},"HeaderPlugin")," will be used to set the style of the autogenerated headers."),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"For example, given a project with:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"an Apache-2.0 license..."),(0,i.kt)("li",{parentName:"ul"},"given that the repository start year is 2019..."),(0,i.kt)("li",{parentName:"ul"},"that the organization name is Alejandro Hern\xe1ndez..."),(0,i.kt)("li",{parentName:"ul"},"and the organization homepage is ",(0,i.kt)("a",{parentName:"li",href:"https://github.com/alejandrohdezma"},"https://github.com/alejandrohdezma"))),(0,i.kt)("p",null,"The following headers will be added to every file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'/*\n * Copyright (c) 2019-2023 Alejandro Hern\xe1ndez <https://github.com/alejandrohdezma>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the "Software"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n')))}m.isMDXComponent=!0}}]);