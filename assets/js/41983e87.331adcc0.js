"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[493],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),c=s(n),b=i,g=c["".concat(l,".").concat(b)]||c[b]||h[b]||o;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=b;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[c]="string"==typeof e?e:i,a[1]=u;for(var s=2;s<o;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},1390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>u,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const o={},a="Github Token",u={unversionedId:"github-token",id:"github-token",title:"Github Token",description:"The Github personal access token that the plugin will use can be set using the githubAuthToken setting:",source:"@site/target/mdoc/github-token.md",sourceDirName:".",slug:"/github-token",permalink:"/sbt-github/docs/github-token",draft:!1,editUrl:"https://github.com/alejandrohdezma/sbt-github/edit/main/site/docs/github-token.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"Excluding contributors",permalink:"/sbt-github/docs/excluding-contributors"},next:{title:"Integration with sbt-header",permalink:"/sbt-github/docs/integrations/sbt-header"}},l={},s=[{value:"Plugin permissions",id:"plugin-permissions",level:2},{value:"Github Actions",id:"github-actions",level:2}],p={toc:s},c="wrapper";function h(e){let{components:t,...n}=e;return(0,i.kt)(c,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"github-token"},"Github Token"),(0,i.kt)("p",null,"The Github ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"personal access token")," that the plugin will use can be set using the ",(0,i.kt)("inlineCode",{parentName:"p"},"githubAuthToken")," setting:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'//Defaults to the value of environment variable `GITHUB_TOKEN`\nThisBuild / githubAuthToken := Some(AuthToken("my-github-token"))\n')),(0,i.kt)("p",null,"By default, the plugin will read the value of an environment variable ",(0,i.kt)("inlineCode",{parentName:"p"},"GITHUB_TOKEN")," read the value of an environment variable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-scala"},'Global / githubAuthToken := sys.env.get("GITHUB_TOKEN").map(AuthToken)\n')),(0,i.kt)("h2",{id:"plugin-permissions"},"Plugin permissions"),(0,i.kt)("p",null,"If you are enabling this in a public repository usually ",(0,i.kt)("inlineCode",{parentName:"p"},"public-repo")," inside ",(0,i.kt)("inlineCode",{parentName:"p"},"repo")," scope should be enough. In the case of a private one you will need to enable the whole ",(0,i.kt)("inlineCode",{parentName:"p"},"repo")," scope."),(0,i.kt)("h2",{id:"github-actions"},"Github Actions"),(0,i.kt)("p",null,"If you are using Github Actions, you can use the ",(0,i.kt)("a",{parentName:"p",href:"https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token#about-the-github_token-secret"},"provided ",(0,i.kt)("inlineCode",{parentName:"a"},"GITHUB_TOKEN")),"."))}h.isMDXComponent=!0}}]);